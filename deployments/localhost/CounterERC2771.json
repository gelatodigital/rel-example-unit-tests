{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9341aa597b7a6c781cea5cd01316aafe4ef3a99d3988c9cad9ecc7cfd4fd02af",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "239486",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x4f5be6d6abf9aefc8d65f0e3b5b762b17fcad3eb9db1d63e043c8fcfc29793e4",
    "transactionHash": "0x9341aa597b7a6c781cea5cd01316aafe4ef3a99d3988c9cad9ecc7cfd4fd02af",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "239486",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xd8253782c45a12053594b9deB72d8e8aB2Fca54c"],
  "numDeployments": 1,
  "solcInputHash": "1a6b600fbdf1e292a35fb5d587ae864e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CounterERC2771.sol\":\"CounterERC2771\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\n// based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/metatx/ERC2771Context.sol\\nabstract contract ERC2771Context {\\n    address private immutable _trustedForwarder;\\n\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder)\\n        public\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return msg.sender;\\n        }\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x20c5b8992a629d2ed20d3929e0c2af18a91a88a6576ad71cc64495ba69c371cf\",\"license\":\"MIT\"},\"contracts/CounterERC2771.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {\\n    ERC2771Context\\n} from \\\"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\\\";\\n\\ncontract CounterERC2771 is ERC2771Context {\\n    mapping(address => uint256) public count;\\n\\n    /* solhint-disable no-empty-blocks */\\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {}\\n\\n    function inc() external {\\n        ++count[_msgSender()];\\n    }\\n}\\n\",\"keccak256\":\"0xe7ff068b1ccbd4227b1731a00a4207e64c9fcb4bcd52f689bf91cb2edbb7d5a7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610466380380610466833981810160405281019061003291906100d1565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050506100fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b6100ae81610093565b81146100b957600080fd5b50565b6000815190506100cb816100a5565b92915050565b6000602082840312156100e7576100e661006e565b5b60006100f5848285016100bc565b91505092915050565b60805161034d6101196000396000610127015261034d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806305d85eda14610046578063371303c014610076578063572b6c0514610080575b600080fd5b610060600480360381019061005b9190610209565b6100b0565b60405161006d919061024f565b60405180910390f35b61007e6100c8565b005b61009a60048036038101906100959190610209565b610123565b6040516100a79190610285565b60405180910390f35b60006020528060005260406000206000915090505481565b6000806100d361017b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815461011a906102cf565b91905081905550565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061018633610123565b1561019a57601436033560601c90506101a2565b3390506101a3565b5b90565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d6826101ab565b9050919050565b6101e6816101cb565b81146101f157600080fd5b50565b600081359050610203816101dd565b92915050565b60006020828403121561021f5761021e6101a6565b5b600061022d848285016101f4565b91505092915050565b6000819050919050565b61024981610236565b82525050565b60006020820190506102646000830184610240565b92915050565b60008115159050919050565b61027f8161026a565b82525050565b600060208201905061029a6000830184610276565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102da82610236565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361030c5761030b6102a0565b5b60018201905091905056fea2646970667358221220be7f8bd42344060670d838888874725b6b1baba3835fb47cda065a6c5a02d69564736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806305d85eda14610046578063371303c014610076578063572b6c0514610080575b600080fd5b610060600480360381019061005b9190610209565b6100b0565b60405161006d919061024f565b60405180910390f35b61007e6100c8565b005b61009a60048036038101906100959190610209565b610123565b6040516100a79190610285565b60405180910390f35b60006020528060005260406000206000915090505481565b6000806100d361017b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815461011a906102cf565b91905081905550565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061018633610123565b1561019a57601436033560601c90506101a2565b3390506101a3565b5b90565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d6826101ab565b9050919050565b6101e6816101cb565b81146101f157600080fd5b50565b600081359050610203816101dd565b92915050565b60006020828403121561021f5761021e6101a6565b5b600061022d848285016101f4565b91505092915050565b6000819050919050565b61024981610236565b82525050565b60006020820190506102646000830184610240565b92915050565b60008115159050919050565b61027f8161026a565b82525050565b600060208201905061029a6000830184610276565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102da82610236565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361030c5761030b6102a0565b5b60018201905091905056fea2646970667358221220be7f8bd42344060670d838888874725b6b1baba3835fb47cda065a6c5a02d69564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2226,
        "contract": "contracts/CounterERC2771.sol:CounterERC2771",
        "label": "count",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
